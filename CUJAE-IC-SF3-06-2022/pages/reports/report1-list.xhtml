<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui">

<ui:composition template="/pages/template/layout.xhtml">
	<ui:define name="head">
		<title>#{msgs.report1_title}</title>
	</ui:define>
	<ui:param name="showMenu" value="true" />
	<ui:define name="layout">
		<h:form id="form">
			<div class="card crud-demo">				
				<p:card>
					<f:facet name="title">#{msgs.report1_title}</f:facet>
					<p:outputLabel value="#{msgs.report1_description}"/>
				</p:card>
				<p:toolbar>				
					<p:toolbarGroup align="right">
					    <!-- Este es un button que tiene como objetivo exportar el contenido de la tabla que apunta a propiedad target
					         del componente dataExporter. En este caso dt-users es el identificador del componente datatable -->
						<p:commandButton value="#{msgs.btn_export}" icon="pi pi-upload"
							styleClass="ui-button-help" ajax="false">
							<p:dataExporter type="pdf" target="dt-report1" fileName="report1" />
						</p:commandButton>
								
						<div class="p-field" style="margin: 15px">
						<h:outputLabel for="date" >#{msgs.report_date}</h:outputLabel>
						<p:datePicker id="date" value="#{manageReportBean.date}" />
						
						</div>
						<p:commandButton value="#{msgs.btn_update}" 
							styleClass="ui-button-help" ajax="false" action="#{manageReportBean.getReports1}">
						</p:commandButton>
						
					</p:toolbarGroup>
				</p:toolbar>
                
                <!-- Componente usado para mostrar tablas con datos y ejecutar operaciones
                	* La propiedad value: apunta a una lista de objetos de tipo UserDto que estÃ¡ en el bean de jsf
                	* La propiedad var: es una instancia de esta lista para poder extaer los objetos, es como iterador
                	  que luego permite poder decir user.<propiedad del objeto>.
                	* La propiedad paginator: define si se quiere paginar o no y es posible definir la position del mismo usando
                	  la propiedad pagePosition.
                    * La propiedad rows: define la cantidad de filas
                	* El facet header define un encabezado y agrega un button para filtrar. Por defecto esto lo hace el solo, si quieren algo
                	  con mayor detalle ver el showcase.  
                 -->
				<p:dataTable id="dt-report1" widgetVar="dtReport1" var="report1"
					value="#{manageReportBean.reports1}" reflow="true" paginator="true"
					rows="10" paginatorPosition="bottom">
					
					<p:column headerText="#{msgs.report_description}" sortBy="#{report1.description}">
						<h:outputText value="#{report1.description}" />
					</p:column>
					<p:column headerText="#{msgs.report_amount}" sortBy="#{report1.cant}">
						<h:outputText value="#{report1.cant}" />
					</p:column>

				</p:dataTable>
			</div>
		</h:form>
	</ui:define>
</ui:composition>
</html>